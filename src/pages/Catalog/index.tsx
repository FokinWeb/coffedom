import React from 'react';
import Filter from '../../components/FIlter';
import ProductCard from '../../components/ProductCard';
import ProductCardLoader from '../../components/ProductCard/ProductCardLoader';
import Breadcrumb from '../../components/UI/Breadcrumb';
import Dropdown from '../../components/UI/Dropdown';
import Search from '../../components/UI/Search';
import { getCategory, getSort } from '../../helpers';
import { useGetProductsQuery } from '../../store/services/product';

import './Catalog.scss';

const Catalog = () => {
  const [activeSize, setActiveSize] = React.useState(0);
  const [searchValue, setSearchValue] = React.useState('');
  const [activeCategory, setActiveCategory] = React.useState(0);
  const [activeSort, setActiveSort] = React.useState(0);

  const category = getCategory(activeCategory);
  const sort = getSort(activeSort);

  const {
    data: products,
    isSuccess,
    isLoading,
  } = useGetProductsQuery(
    `title_like=${searchValue}&categoryId_like=${category}&_sort=${sort}&_order=desc`,
    {
      refetchOnMountOrArgChange: true,
    },
  );

  const skeletons = [...new Array(4)].map((_, i) => <ProductCardLoader key={i} />);
  const productItems =
    products &&
    products.map((product) => (
      <ProductCard key={product.id} activeItem={activeSize} product={product} />
    ));
  const notFoundProducts = products && products.length === 0 && (
    <div className="catalog__notfound">–¢–∞–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç üòï</div>
  );

  return (
    <div className="catalog">
      <div className="catalog__top">
        <div className="container">
          <Breadcrumb elements={[['–ì–ª–∞–≤–Ω–∞—è', '/']]} current={'–ö–∞—Ç–∞–ª–æ–≥'} />
          <h1>–ö–∞—Ç–∞–ª–æ–≥</h1>
        </div>
        <div className="container">
          <div className="catalog__top-wrapper">
            <div className="catalog__top-item">
              <h3 className="catalog__top-title">–û–±—å—ë–º/–≤–µ—Å</h3>
              <Filter
                activeItem={activeSize}
                setActiveItem={setActiveSize}
                filters={[
                  { id: 0, text: '–õ—é–±–æ–π' },
                  { id: 1, text: '250 –º–ª. / 90  –≥.' },
                  { id: 2, text: '350 –º–ª. / 120 –≥.' },
                  { id: 3, text: '450 –º–ª. . 160 –≥.' },
                ]}
              />
            </div>
            <div className="catalog__top-item">
              <h3 className="catalog__top-title">–ü–æ–∏—Å–∫</h3>
              <Search searchText={searchValue} setSearchText={setSearchValue} />
            </div>
            <div className="catalog__top-item">
              <h3 className="catalog__top-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
              <Dropdown
                key={1}
                activeElement={activeCategory}
                setActiveElement={setActiveCategory}
                items={[
                  { id: 0, text: '–í—Å–µ' },
                  { id: 1, text: '–ù–∞–ø–∏—Ç–∫–∏' },
                  { id: 2, text: '–°–Ω—ç–∫–∏' },
                ]}
              />
            </div>
            <div className="catalog__top-item">
              <h3 className="catalog__top-title">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</h3>
              <Dropdown
                key={0}
                activeElement={activeSort}
                setActiveElement={setActiveSort}
                basicText="–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ: "
                items={[
                  { id: 0, text: '–ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏' },
                  { id: 1, text: '–Ω–∞–∑–≤–∞–Ω–∏—é' },
                  { id: 2, text: '—Ü–µ–Ω–µ' },
                ]}
              />
            </div>
          </div>
        </div>
      </div>
      <div className="container">
        <div className="catalog__wrapper">
          {isSuccess && productItems}
          {isLoading && skeletons}
        </div>
        {notFoundProducts}
      </div>
    </div>
  );
};

export default Catalog;
